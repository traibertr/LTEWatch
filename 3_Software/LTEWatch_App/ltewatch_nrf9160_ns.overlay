// To get started, press Ctrl+Space to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://nrfconnect.github.io/vscode-nrf-connect/devicetree/nrfdevicetree.html
/ {
	chosen {
		zephyr,display = &ls0xx;
	};

};

// ADC

/ {
	zephyr,user {
		io-channels = <&adc 3>; // P0.16 = AIN3
		// Display
		disp-en-gpios = <&gpio0 27 GPIO_ACTIVE_HIGH>;
		// Battery Manager
		bat-lvl-gpios	 = <&gpio0 12 GPIO_ACTIVE_HIGH>;
		batlvl-en-gpios   = <&gpio0 11 GPIO_ACTIVE_HIGH>;
		batchrg-int-gpios = <&gpio0 10 GPIO_ACTIVE_LOW>;
		// GNSS Receiver
		gps-rst-gpios = <&gpio0 25 GPIO_ACTIVE_LOW>;
		gps-en-gpios  = <&gpio0 26 GPIO_ACTIVE_HIGH>;
		// Clock Motors
		motor-max-number  = <3>;
		motor-d1m1-gpios  = <&gpio0 0 GPIO_ACTIVE_HIGH>;
		motor-d1com-gpios = <&gpio0 1 GPIO_ACTIVE_HIGH>;
		motor-d1m2-gpios  = <&gpio0 2 GPIO_ACTIVE_HIGH>;
		motor-d2m1-gpios  = <&gpio0 5 GPIO_ACTIVE_HIGH>;
		motor-d2com-gpios = <&gpio0 4 GPIO_ACTIVE_HIGH>;
		motor-d2m2-gpios  = <&gpio0 3 GPIO_ACTIVE_HIGH>;
		//Pin Shared with led0..2 so already defined
		//motor6-gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
		//motor7-gpios = <&gpio0 14 GPIO_ACTIVE_HIGH>;
		//motor8-gpios = <&gpio0 13 GPIO_ACTIVE_HIGH>;
		// Led
		led-max-number  = <3>;
		// Button
		button-max-number  = <3>;
	 };

	 aliases {
		motord3m1  = &led0;
		motord3com = &led1;
		motord3m2  = &led2;
	};
};


&adc {
	#address-cells = <1>;
	#size-cells = <0>;
    status = "okay";

	channel@0 {
		reg = <0>;
		zephyr,gain = "ADC_GAIN_1_5";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,input-positive = <NRF_SAADC_AIN3>;  // P0.16 = AIN3
		zephyr,resolution = <12>;
	};
};

&gpiote {
	status = "okay";
};

&gpio0 {
    status = "okay";
};

&uart0 {
	status = "okay";
	current-speed = <115200>;
	pinctrl-0 = <&uart0_default>;
	pinctrl-1 = <&uart0_sleep>;
	pinctrl-names = "default", "sleep";
};

&timer0 {
	status = "okay";
};

&timer1 {
	status = "okay";
};

&timer2 {
	status = "okay";
};

&i2c1 {
    compatible = "nordic,nrf-twim";
	status = "okay";
    pinctrl-0 = <&i2c1_default>;
    /* sleep state (only applicable if CONFIG_PM_DEVICE=y) */
    pinctrl-1 = <&i2c1_sleep>;
    /* state assigned to each pinctrl-N property by index */
    pinctrl-names = "default", "sleep";
    clock-frequency = <I2C_BITRATE_STANDARD>;
};

&i2c2 {
    status = "disabled";
};

&spi3 {
    status = "disabled";
};

&spi2 {
	compatible = "nordic,nrf-spim";
	status = "okay";
    cs-gpios = <&gpio0 28 GPIO_ACTIVE_HIGH>, 	//Display scs
				<&gpio0 20 GPIO_ACTIVE_LOW>;	//Accelerometer scs
	pinctrl-0 = <&spi2_default>;
	pinctrl-1 = <&spi2_sleep>;
	pinctrl-names = "default", "sleep";
	ls0xx: ls0xx@0 {
		compatible = "sharp,ls0xx";
		label = "DISPLAY";
		spi-max-frequency = <2000000>;
		width = <160>;
		height = <68>;
		reg = <0>;
	};
};

&pinctrl {

	uart0_default: uart0_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 6)>;
		};
		group2 {
			psels = <NRF_PSEL(UART_RX, 0, 7)>;
			bias-pull-up;
		};
	};

	uart0_sleep: uart0_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 6)>,
				<NRF_PSEL(UART_RX, 0, 7)>;
			low-power-enable;
		};
	};

    /* configuration for i2c1 device, default state */
	i2c1_default: i2c1_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 0, 8)>,
				<NRF_PSEL(TWIM_SCL, 0, 9)>;
		};
	};

	i2c1_sleep: i2c1_sleep {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 0, 8)>,
				<NRF_PSEL(TWIM_SCL, 0, 9)>;
			low-power-enable;
		};
	};

	spi2_default: spi2_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 30)>,
					<NRF_PSEL(SPIM_MISO, 0, 29)>,
					<NRF_PSEL(SPIM_MOSI, 0, 31)>;
		};
	};

	spi2_sleep: spi2_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 30)>,
					<NRF_PSEL(SPIM_MISO, 0, 29)>,
					<NRF_PSEL(SPIM_MOSI, 0, 31)>;
			low-power-enable;
		};
	};
};
